<%= javascript_include_tag 'jquery.galleriffic.js' %>
<%= stylesheet_link_tag 'basic.css' %>
<%= stylesheet_link_tag 'black.css' %>

<%= stylesheet_link_tag 'galleriffic-5.css' %>
<%= javascript_include_tag 'jquery.history.js' %>
<%= javascript_include_tag 'jquery.opacityrollover.js' %>

<script type="text/javascript">
  jQuery(document).ready(function($) {
    // We only want these styles applied when javascript is enabled
    $j('div.content').css('display', 'block');

    // Initially set opacity on thumbs and add
    // additional styling for hover effect on thumbs
    var onMouseOutOpacity = 0.67;
    $j('#thumbs ul.thumbs li, div.navigation a.pageLink').opacityrollover({
      mouseOutOpacity:   onMouseOutOpacity,
      mouseOverOpacity:  1.0,
      fadeSpeed:         'fast',
      exemptionSelector: '.selected'
    });
    // Enable toggling of the caption
    var captionOpacity = 0.0;
    $j('#captionToggle a').click(function(e) {
      var link = $(this);

      var isOff = link.hasClass('off');
      var removeClass = isOff ? 'off' : 'on';
      var addClass = isOff ? 'on' : 'off';
      var linkText = isOff ? 'Hide Caption' : 'Show Caption';
      captionOpacity = isOff ? 0.7 : 0.0;

      link.removeClass(removeClass).addClass(addClass).text(linkText).attr('title', linkText);
      $j('#caption span.image-caption').fadeTo(1000, captionOpacity);
      e.preventDefault();
    });
    
    // Initialize Advanced Galleriffic Gallery
    var gallery = $j('#thumbs').galleriffic({
      delay:                     2500,
      numThumbs:                 8,
      preloadAhead:              10,
      enableTopPager:            false,
      enableBottomPager:         false,
      imageContainerSel:         '#slideshow',
      controlsContainerSel:      '#controls',
      captionContainerSel:       '#caption',
      loadingContainerSel:       '#loading',
      renderSSControls:          true,
      renderNavControls:         true,
      playLinkText:              'Слайдшоу',
      pauseLinkText:             'Остановить слайдшоу',
      prevLinkText:              '&lsaquo; Предидущая фотография',
      nextLinkText:              'Следующая фотография &rsaquo;',
      nextPageLinkText:          'Вперед &rsaquo;',
      prevPageLinkText:          '&lsaquo; Назад',
      enableHistory:             true,
      autoStart:                 false,
      syncTransitions:           true,
      defaultTransitionDuration: 900,
      onSlideChange:             function(prevIndex, nextIndex) {
        // 'this' refers to the gallery, which is an extension of $('#thumbs')
        this.find('ul.thumbs').children()
        .eq(prevIndex).fadeTo('fast', onMouseOutOpacity).end()
        .eq(nextIndex).fadeTo('fast', 1.0);

      },
      onTransitionOut:           function(slide, caption, isSync, callback) {
        slide.fadeTo(this.getDefaultTransitionDuration(isSync), 0.0, callback);
        caption.fadeTo(this.getDefaultTransitionDuration(isSync), 0.0);
      },
      onTransitionIn:            function(slide, caption, isSync) {
        var duration = this.getDefaultTransitionDuration(isSync);
        slide.fadeTo(duration, 1.0);

        // Position the caption at the bottom of the image and set its opacity
        var slideImage = slide.find('img');
        caption.width(slideImage.width())
        .css({
          'bottom' : Math.floor((slide.height() - slideImage.outerHeight()) / 2),
          'left' : Math.floor((slide.width() - slideImage.width()) / 2) + slideImage.outerWidth() - slideImage.width()
        })

        .fadeTo(duration, captionOpacity);
      },

      onPageTransitionOut:       function(callback) {
        this.fadeTo('fast', 0.0, callback);
      },
      onPageTransitionIn:        function() {
        var prevPageLink = this.find('a.prev').css('visibility', 'hidden');
        var nextPageLink = this.find('a.next').css('visibility', 'hidden');

        // Show appropriate next / prev page links
        if (this.displayedPage > 0)
          prevPageLink.css('visibility', 'visible');

        var lastPage = this.getNumPages() - 1;
        if (this.displayedPage < lastPage)
          nextPageLink.css('visibility', 'visible');

        this.fadeTo('fast', 1.0);



      }
    });

    /**************** Event handlers for custom next / prev page links **********************/

    gallery.find('a.prev').click(function(e) {
      gallery.previousPage();
      e.preventDefault();
    });

    gallery.find('a.next').click(function(e) {
      gallery.nextPage();
      e.preventDefault();
    });

    /****************************************************************************************/

    /**** Functions to support integration of galleriffic with the jquery.history plugin ****/

    // PageLoad function
    // This function is called when:
    // 1. after calling $.historyInit();
    // 2. after calling $.historyLoad();
    // 3. after pushing "Go Back" button of a browser
    function pageload(hash) {
      // alert("pageload: " + hash);
      // hash doesn't contain the first # character.
      if(hash) {
        $.galleriffic.gotoImage(hash);
      } else {
        gallery.gotoIndex(0);
      }
    }

    // Initialize history plugin.
    // The callback is called at once by present location.hash.
    $.historyInit(pageload, "advanced.html");

    // set onlick event for buttons using the jQuery 1.3 live method
    $("a[rel='history']").live('click', function(e) {
      if (e.button != 0) return true;

      var hash = this.href;
      hash = hash.replace(/^.*#/, '');

      // moves to a new page.
      // pageload is called at once.
      // hash don't contain "#", "?"
      $.historyLoad(hash);

      return false;
    });

    /****************************************************************************************/

  });

</script>
<% content_for :title do %>
  Галлерея
<% end %>
<p><%= link_to "Добавить  новое изображение", new_admin_gallery_path %></p>
<div id="thumbs" class="navigation">
  <a class="pageLink prev" style="visibility: hidden;" href="#" title="Previous Page"></a>
  <ul class="thumbs noscript">
    <%  @galleries.each do |photo| %>
      <li>
        <%= link_to(image_tag(photo.gallery_photo.url(:thumb)), photo.gallery_photo.url(:small), :class => "thumb") %>
        <div class="caption">
          <div class="image-title"><%= photo.title %></div>
          <div class="image-desc">
            <%= photo.description %>
            <span style="float: right;">
              <%= link_to "Редактировать", edit_admin_gallery_path(photo) %>
              <%= link_to "Удалить", admin_gallery_path(photo), :confirm => 'Вы уверены?', :method => :delete %>
            </span>
          </div>
        </div>
      </li>
    <%end%>
  </ul>

  <a class="pageLink next" style="visibility: hidden;" href="#" title="Next Page"></a>

</div>

<div  class="content">
  <div class="slideshow-container">
    <div id="controls" class="controls" style="margin-right: 15px"></div>
    <div id="loading" class="loader"></div>
    <div id="slideshow" class="slideshow"></div>

    <div id="caption" class="caption-container"></div>
  </div>

  <div id="captionToggle">
    <a href="#toggleCaption" class="off" title="Show Caption">Показать кнопки управления</a>
  </div>

</div>

<div style="clear: both;"></div>
